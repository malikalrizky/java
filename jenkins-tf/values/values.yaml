jenkinsUser: admin
jenkinsPassword: admin

## Jenkins Java settings
##
javaOpts: '-Dpermissive-script-security.enabled=true'

## Jenkins configuration files
## We can use the feature of JCasC, the configuration is defined through a configuration file
## ref: https://github.com/jenkinsci/configuration-as-code-plugin
##
jcasc:
  defaultConfig: true
  configScripts:
    welcome-message: |
      jenkins:
        systemMessage: Welcome to Kube-Jenkins!
    job-config: |
      jobs:
        - script: >
            pipelineJob('testjobs/default-agent') {
              definition {
                cps {
                  script("""\
                    pipeline {
                      agent any
                      environment {
                        DOCKER_CREDENTIALS = 'YourDockerCredentialsId'
                        IMAGE_NAME = 'java'
                        IMAGE_TAG = "${env.BUILD_NUMBER}"
                      }
                      stages {
                        stage ('Checkout') {
                          steps {
                            checkout scm
                          }
                        }
                        stage ('Build Docker Image') {
                          steps {
                            script {
                              docker.build("${IMAGE_NAME}:${IMAGE_TAG}")
                            }
                          }
                        }
                        stage ('Push Docker Image') {
                          steps {
                            script {
                              docker.withRegistry('localhost:5000') {
                                docker.image("${IMAGE_NAME}:${IMAGE_TAG}").push()
                              }
                            }
                          }
                        }
                        stage ('Deploy to Kubernetes') {
                          steps {
                            sh """
                              envsubst < ./manifest/deployment.tmpl > ./manifest/deployment.yaml &&
                              kubectl apply -f ./manifest/deployment.yaml
                            """
                          }
                        }
                      }
                    }""".stripIndent())
                  sandbox()
                }
              }
            }

## Jenkins Plugins
## ref: https://github.com/bitnami/bitnami-docker-jenkins#installing-plugins
##
plugins:
  install: true
  list:
    - job-dsl:1.7
    - permissivescript-security:0.6
    - github:latest
    - github-webhook:latest
    - kubernetes-credentials:latest
    - docker-plugin:latest
    - docker-workflow:latest

## Jenkins service settings
##
service:
  type: NodePort

## ServiceAccount configuration
##
serviceAccount:
  create: false
  name: jenkins
  annotations: {}

# ... [rest of the values.yaml content] ...
